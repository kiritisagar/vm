name: SSH to GCP Instance

on:
  push:
    branches:
      - main

jobs:
  ssh-to-instance:
    name: SSH to GCP Instance
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Google Cloud CLI
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        export_default_credentials: true

    - name: Authenticate gcloud
      run: |
        echo "${{ secrets.GCP_SA_KEY }}" > $HOME/gcp-key.json
        gcloud auth activate-service-account --key-file=$HOME/gcp-key.json

    - name: Configure GCP project
      run: |
        gcloud config set project ${{ secrets.GCP_PROJECT_ID }}

    - name: Add SSH Key
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.GCP_SSH_PRIVATE_KEY }}" > ~/.ssh/google_compute_engine
        chmod 600 ~/.ssh/google_compute_engine
        echo "SSH key added and permissions set."

    - name: Add Firewall Rule for IAP Access
      run: |
        gcloud compute firewall-rules create allow-iap-ingress \
          --direction=INGRESS \
          --action=ALLOW \
          --rules=tcp:22 \
          --source-ranges=35.235.240.0/20 \
          --target-tags=iap-access || echo "Firewall rule already exists."

    - name: SSH into GCP Instance
      run: |
        gcloud compute ssh spot \
          --zone=us-central1-a \
          --tunnel-through-iap \
          --command="echo 'SSH successful'" \
          --ssh-flag="-o StrictHostKeyChecking=no" \
          --ssh-flag="-o UserKnownHostsFile=/dev/null"

    - name: Cleanup Temporary Files
      if: always()
      run: |
        rm -f $HOME/gcp-key.json
        rm -f ~/.ssh/google_compute_engine
